Running on the GPU0

#### starting new seed ####

random seed is: 11135967900375438520
model's performance on test data:
mse: 2063.6239254730617, rmse: 45.42712763837333, mean: 33.684197348004815
std: 30.479957455315873, min: -10.523525471922445, max: 110.13866041026681

iteration: 0, loss: 2183.510864, current train MSE: 2183.674432729052, lowers train MSE: 2183.674432729052, training time: 1.2146s
Traceback (most recent call last):
  File "train.py", line 22, in <module>
    n_iterations=int(args.number_iterations), lambda_entropy=float(args.lambda_entropy))
  File "/home/math/scholl/projects/physicalLawLearning/SyReNets/syrenets_code/neurips_supplementary.py", line 81, in train
    n_mini_batch=n_mini_batch, n_iterations=n_iterations, lambda_entropy=lambda_entropy)
  File "/home/math/scholl/projects/physicalLawLearning/SyReNets/syrenets_code/neurips_supplementary.py", line 41, in run
    evaluator.train(n_iterations=n_iterations)
  File "/home/math/scholl/projects/physicalLawLearning/SyReNets/syrenets_code/evaluator.py", line 112, in train
    plt.plot(mse_list)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/pyplot.py", line 2771, in plot
    **({"data": data} if data is not None else {}), **kwargs)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/axes/_axes.py", line 1632, in plot
    lines = [*self._get_lines(*args, data=data, **kwargs)]
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/axes/_base.py", line 312, in __call__
    yield from self._plot_args(this, kwargs)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/axes/_base.py", line 490, in _plot_args
    x, y = index_of(xy[-1])
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/cbook/__init__.py", line 1614, in index_of
    y = _check_1d(y)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/cbook/__init__.py", line 1306, in _check_1d
    return np.atleast_1d(x)
  File "<__array_function__ internals>", line 6, in atleast_1d
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/numpy/core/shape_base.py", line 65, in atleast_1d
    ary = asanyarray(ary)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/torch/_tensor.py", line 732, in __array__
    return self.numpy()
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
