Running on the GPU0

#### starting new seed ####

random seed is: 11135967900375438520
model's performance on test data:
mse: 2063.6239254730617, rmse: 45.42712763837333, mean: 33.684197348004815
std: 30.479957455315873, min: -10.523525471922445, max: 110.13866041026681

iteration: 0, loss: 2187.050517, current train MSE: 2183.674432729052, lowers train MSE: 2183.674432729052, training time: 0.1042s
model's performance on test data:
mse: 1820.928087986069, rmse: 42.672333988031035, mean: -2.422022624708028
std: 42.6042089084032, min: -105.00866664187639, max: 116.13447963084901

iteration: 2000, loss: -2.775924, current train MSE: 0.35898377618196076, lowers train MSE: 0.01925149894280389, training time: 95.8722s
model's performance on test data:
mse: 1815.8167902840091, rmse: 42.61240183660162, mean: -2.3772426968504887
std: 42.5467046520267, min: -104.6754010561847, max: 116.11706704655259

iteration: 4000, loss: -5.624042, current train MSE: 0.008508678612232373, lowers train MSE: 0.005941779662758874, training time: 197.1355s
model's performance on test data:
mse: 1814.174238259754, rmse: 42.59312430733104, mean: -2.3631888889875627
std: 42.528180029103446, min: -104.49497586546858, max: 116.14197352814473

iteration: 6000, loss: -6.564747, current train MSE: 0.03906319777428077, lowers train MSE: 0.002742823712252756, training time: 303.9055s
model's performance on test data:
mse: 1813.9371833964979, rmse: 42.590341433199356, mean: -2.378555224870353
std: 42.524536079851586, min: -104.42143033790262, max: 116.18180807665587

iteration: 8000, loss: -7.787719, current train MSE: 0.0019738836235619044, lowers train MSE: 0.0007092056085654131, training time: 409.6693s
Traceback (most recent call last):
  File "train.py", line 22, in <module>
    n_iterations=int(args.number_iterations), lambda_entropy=float(args.lambda_entropy))
  File "/home/math/scholl/projects/physicalLawLearning/SyReNets/syrenets_code/neurips_supplementary.py", line 81, in train
    n_mini_batch=n_mini_batch, n_iterations=n_iterations, lambda_entropy=lambda_entropy)
  File "/home/math/scholl/projects/physicalLawLearning/SyReNets/syrenets_code/neurips_supplementary.py", line 41, in run
    evaluator.train(n_iterations=n_iterations)
  File "/home/math/scholl/projects/physicalLawLearning/SyReNets/syrenets_code/evaluator.py", line 105, in train
    plt.plot([loss - min(loss_list) + 0.001 for loss in loss_list])
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/pyplot.py", line 2771, in plot
    **({"data": data} if data is not None else {}), **kwargs)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/axes/_axes.py", line 1632, in plot
    lines = [*self._get_lines(*args, data=data, **kwargs)]
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/axes/_base.py", line 312, in __call__
    yield from self._plot_args(this, kwargs)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/axes/_base.py", line 490, in _plot_args
    x, y = index_of(xy[-1])
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/cbook/__init__.py", line 1614, in index_of
    y = _check_1d(y)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/cbook/__init__.py", line 1306, in _check_1d
    return np.atleast_1d(x)
  File "<__array_function__ internals>", line 6, in atleast_1d
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/numpy/core/shape_base.py", line 65, in atleast_1d
    ary = asanyarray(ary)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/torch/_tensor.py", line 732, in __array__
    return self.numpy()
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
