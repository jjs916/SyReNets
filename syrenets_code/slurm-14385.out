Running on the GPU0

#### starting new seed ####

random seed is: 11135967900375438520
model's performance on test data:
mse: 2063.6239254730617, rmse: 45.42712763837333, mean: 33.684197348004815
std: 30.479957455315873, min: -10.523525471922445, max: 110.13866041026681

iteration: 0, loss: 2183.542753, current train MSE: 2183.674432729052, lowers train MSE: 2183.674432729052, training time: 0.3560s
model's performance on test data:
mse: 1817.7439609057726, rmse: 42.6350086303002, mean: -2.3892654759222385
std: 42.56867391790521, min: -104.89459832771962, max: 116.06429993451903

iteration: 2000, loss: -4.261190, current train MSE: 0.10269287903849833, lowers train MSE: 0.025009890647460876, training time: 79.1089s
model's performance on test data:
mse: 1813.7024345674406, rmse: 42.58758545124906, mean: -2.3750775503827293
std: 42.52197014186284, min: -104.45383337099251, max: 116.14318489353425

iteration: 4000, loss: -6.691083, current train MSE: 0.0040993704769254295, lowers train MSE: 0.0017819976719877257, training time: 164.1062s
model's performance on test data:
mse: 1812.28515069559, rmse: 42.570942562921836, mean: -2.3774386966291825
std: 42.50516903678337, min: -104.31100735101376, max: 116.16160634671233

iteration: 6000, loss: -7.653999, current train MSE: 0.0008647514902992025, lowers train MSE: 0.00017545185817576827, training time: 257.4581s
model's performance on test data:
mse: 1812.4149031116817, rmse: 42.57246649081636, mean: -2.3723907016738512
std: 42.506977417603494, min: -104.26790421680185, max: 116.20468679462653

iteration: 8000, loss: -9.391913, current train MSE: 0.000246192929609084, lowers train MSE: 1.3071445306263032e-05, training time: 359.5557s
Traceback (most recent call last):
  File "train.py", line 22, in <module>
    n_iterations=int(args.number_iterations), lambda_entropy=float(args.lambda_entropy))
  File "/home/math/scholl/projects/physicalLawLearning/SyReNets/syrenets_code/neurips_supplementary.py", line 81, in train
    n_mini_batch=n_mini_batch, n_iterations=n_iterations, lambda_entropy=lambda_entropy)
  File "/home/math/scholl/projects/physicalLawLearning/SyReNets/syrenets_code/neurips_supplementary.py", line 41, in run
    evaluator.train(n_iterations=n_iterations)
  File "/home/math/scholl/projects/physicalLawLearning/SyReNets/syrenets_code/evaluator.py", line 105, in train
    plt.plot([loss - min(loss_list) + 0.001 for loss in loss_list])
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/pyplot.py", line 2771, in plot
    **({"data": data} if data is not None else {}), **kwargs)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/axes/_axes.py", line 1632, in plot
    lines = [*self._get_lines(*args, data=data, **kwargs)]
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/axes/_base.py", line 312, in __call__
    yield from self._plot_args(this, kwargs)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/axes/_base.py", line 490, in _plot_args
    x, y = index_of(xy[-1])
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/cbook/__init__.py", line 1614, in index_of
    y = _check_1d(y)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/matplotlib/cbook/__init__.py", line 1306, in _check_1d
    return np.atleast_1d(x)
  File "<__array_function__ internals>", line 6, in atleast_1d
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/numpy/core/shape_base.py", line 65, in atleast_1d
    ary = asanyarray(ary)
  File "/home/groups/ai/scholl/miniconda3/envs/srbench/lib/python3.7/site-packages/torch/_tensor.py", line 732, in __array__
    return self.numpy()
TypeError: can't convert cuda:0 device type tensor to numpy. Use Tensor.cpu() to copy the tensor to host memory first.
